<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="dynamic">
	<select id='if_test' parameterType='String' resultType='mybatis.BoardVo'>
		select * from board
		<if test='_parameter != null'>
		where subject like '%${_parameter}%'
		or    content like '%${_parameter}%'
		</if>
	</select>
	
	<select id='choose_test' parameterType='String' resultType='Integer'>
		<choose>
			<when test='_parameter.equals("s")'>
				select count(*) from board where subject like '%1%'
			</when>
			
			<when test='_parameter.equals("c")'>
				select count(*) from board where content like '%5%'
			</when>
			
			<otherwise>
				select count(*) from board
			</otherwise>
		</choose>
	</select>
	
	<select id='where_test' parameterType='mybatis.BoardVo' resultType='Integer'>
		select count(*) from board
		<where>
			<if test='serial != 0' >
				pserial = ${serial}
			</if>
			<if test='id != null'>
				or id like '%${id}%'
			</if>
		</where>
	</select>
	<!-- select count(*) from board
		where pserial=10
		or id like '%a%';
		
		select count(*) from board
		where pserial = 10
		
		select count(*) from board
		where or id like '%a%' -->
	<update id='set_test' parameterType='mybatis.BoardVo'>
		update board
		<set>
			<if test='subject !=null'>
				subject = #{subject}
			</if>
			<if test='content !=null'>
				, content= #{content}
			</if>
		</set>
		where serial = #{serial}
	</update>
	
	<select id='trim_test' parameterType='mybatis.BoardVo' resultType='Integer'>
		select count(*) from board
		<!-- 앞에 or 는prefixOverrides='or|and' 로 삭제 뒤에 콤마는 suffixOverrides=',' 로 삭제됨 -->
		<trim prefix='where' prefixOverrides='or|and' suffixOverrides=','>
			or subject like '%${subject}%' ,  
		</trim>		
	</select>
	
	<select id='foreach_test' parameterType='list' resultType='mybatis.BoardVo'>
		select * from board
		<where>
			id in
			<foreach collection='array' item='data' open='(' close=')' separator=','>
				#{data}
			</foreach>
		</where>
		 <!--where id in ( 'a', 'b', 'c', 'd' )-->
	</select>
	
	<!--프로시저 호출-->
	<select id='pl_sql' statementType='CALLABLE' parameterType='mybatis.BoardVo' resultType='mybatis.BoardVo' >
		{call hr.get_boardVo(		
			#{serial,  mode=IN,  jdbcType=INTEGER},
			#{subject, mode=OUT, jdbcType=VARCHAR},
			#{id, 	   mode=OUT, jdbcType=VARCHAR},
			#{mDate,   mode=OUT, jdbcType=VARCHAR},
			#{hit,     mode=OUT, jdbcType=INTEGER}
			)
		}
	
	
	</select>
	
	

</mapper>